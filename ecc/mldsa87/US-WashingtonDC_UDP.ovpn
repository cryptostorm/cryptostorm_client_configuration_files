#
# This config requires OpenVPN => 2.4.3 and OpenSSL => 3.5.0
#
# Note: This OpenVPN instance is not "fully" post-quantum.
# It only protects the *authentication layer* (i.e., prevents quantum impersonation of the server),
# because ML-DSA-87 is only used for the server certificate signature (ECDSA).
# The key exchange is still done using traditional ECDHE (not PQ KEMs).
# We have to wait for OpenVPN to add support for PQ KEMs before we can use those.

# The 5063 below is the UDP port to connect to the VPN on.
# The ML-DSA-87 configs only work on port 5063.
remote dc.cstorm.is 5063 udp
remote dc.cstorm.net 5063 udp
remote dc.cryptostorm.pw 5063 udp

# Change the below to "auth-user-pass somefile" to login automatically.
# That way you're not prompted for the username/password every time you connect.
# The 'somefile' needs to be a file containing your token's SHA512 hash on the first line,
# and any random text on the second line.
auth-user-pass

# Uncomment these lines below to enable our DNS-based ad/tracker blocking service.
#pull-filter ignore "dhcp-option DNS 10.31.33.8"
#pull-filter ignore "dhcp-option DNS 2001:db8::8"
#dhcp-option DNS 10.31.33.7
#dhcp-option DNS 2001:db8::7

# You probably don't need to change anything below these lines.

# Client mode
client

# tun devices encapsulate IPv4 or IPv6 (OSI Layer 3).
# tap devices encapsulate Ethernet 802.3 (OSI Layer 2).
# This is a VPN service for OSI Layer 3, so don't change this to tap.
dev tun

# "If hostname resolve fails for --remote, retry resolve for 16 seconds before failing."
resolv-retry 16

# "Require that peer certificate was signed with an explicit key usage and extended key usage based on
# RFC3280 TLS rules. This is a useful security option for clients, to ensure that the host they connect
# to is a designated server. This is an important security precaution to protect against a
# man-in-the-middle attack where an authorized client attempts to connect to another client by
# impersonating the server. The attack is easily prevented by having clients verify the server certificate
# using any one of --remote-cert-tls, --verify-x509-name, or --tls-verify."
remote-cert-tls server

# "Accept connections only if a host's X.509 name is equal to name.
# The remote host must also pass all other tests of verification."
# This covers the scenario where a server gets confiscated/hacked by 'whoever', and 'whoever' also has the
# ability to perform a man-in-the-middle attack against traffic coming into another server
# (or leaving a client). They could use the stolen server certificate/key to impersonate that other server,
# if the CN is the same (or the verify command below wasn't used).
verify-x509-name "cryptostorm dc server" name

# Randomize the above node list as a kind of basic load-balancing.
# Not really necessary since balancing happens at the DNS level.
remote-random

# "Call --down cmd/script before, rather than after, TUN/TAP close."
# No down cmd/script is used in this configuration, but most Linux users will be adding an up/down script
# that updates the system's DNS. Without this the system would have to wait for the tunnel to close before
# it could update the DNS, which might lead to DNS resolution failures until TUN closes.
down-pre

# Increase --verb for more verbosity, 0 to disable (except fatal errors).
verb 4

# "Log at most 3 consecutive messages in the same category"
# Helps prevent the logs or STDOUT from getting flooded with the same messages.
mute 3

# This is necessary in UDP mode because otherwise it can take about 2 minutes for the server to timeout the session,
# which is also when the session counter decreases, so quickly disconnecting then reconnecting might cause
# authorization failed errors if your token has a low device limit as with the one week or one month tokens.
# explicit-exit-notify tells the server to immediately close it's client instance object whenever the client disconnects,
# which means the session counter is decreased immediately. The 3 is the maximum number of attempts that the client
# will try to resend the exit notification message.
explicit-exit-notify 3

# This is the cipher that will encrypt OpenVPN's "data channel", i.e. your actual traffic.
cipher AES-256-GCM
# AES-256-GCM is the only supported cipher in this instance — ChaCha20 is *not* enabled.
# Normally we recommend ChaCha20-Poly1305 for devices without AES-NI, but this particular OpenVPN instance
# was configured to only allow AES due to its slightly higher post-quantum "safety margin."
# Although both AES-256 and ChaCha20 offer ~128-bit security against Grover’s algorithm (quantum attacks),
# AES-256 has a 256-bit key and 128-bit block, while ChaCha20 has a 256-bit key and 512-bit stream block.
# Some researchers argue AES offers a better post-quantum safety margin due to more mature cryptanalysis
# and a potentially higher resistance to Grover-style quantum attacks on symmetric primitives.

# Minimum TLS version allowed is 1.2 to prevent downgrade attacks.
tls-version-min 1.2

# The control channel (TLS) uses only AES-based TLS ciphersuites as well — no ChaCha20:
#  - ECDHE: Elliptic Curve Diffie-Hellman for key exchange
#  - ECDSA: Server authentication with ML-DSA-87 (post-quantum digital signature)
#  - AES-256-GCM: Symmetric encryption
#  - SHA384: Hashing algorithm
tls-cipher TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384

# "Enable TLS and assume client role during TLS handshake."
tls-client

# This CA certificate is signed with ML-DSA-87 instead of traditional EC curves like Ed25519/Ed448/secp521r1.
# ML-DSA-87 is a NIST Level 5 post-quantum digital signature algorithm based on lattice cryptography.
# Specifically, it's derived from CRYSTALS-Dilithium, and relies on the Module Learning With Errors (MLWE) problem.
# It offers strong resistance against both classical and quantum attacks, with an estimated 256-bit classical security level.
# Compared to traditional schemes:
#   - Ed25519   ≈ 128-bit classical security
#   - RSA-8192  ≈ ~170-bit classical security
#   - Ed448     ≈ 224-bit classical security
#   - secp521r1 ≈ 256-bit classical security
#   - ML-DSA-87 ≈ 256-bit classical + post-quantum security
<ca>
-----BEGIN CERTIFICATE-----
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
-----END CERTIFICATE-----
</ca>

# "Encrypt and authenticate all control channel packets with the key".
# "Encrypting (and authenticating) control channel packets:
#   provides more privacy by hiding the certificate used for the TLS connection,
#   makes it harder to identify OpenVPN traffic as such,
#   provides "poor-man's" post-quantum security"
<tls-crypt>
-----BEGIN OpenVPN Static key V1-----
4875d729589689955012a2ee77f180ec
b815c4a336c719c11241a058dafaae00
806bbc21d5f1abad085341a3fca4b4f9
3949151c2979b4ee4390e8d9443acb00
61d537f1e9157e45f542c3648f563305
05f3eaff97ef82ee063b9d88bb9d5aa0
060428455b51a2a4fd929d9af4b94adc
b0a4acaa14ff62a9b0f4f9f0b3f01e71
fc98a6c60e8584f4deb3de793a5a7bc2
7014c9369f9724bc810ef0d191b30204
78eead725b3ae6aaef2e1030a197e417
421f159ed54eb2629afcfb337cf9a002
5bf1d5c0d820fffb219d0b4214043d2d
f27ed367b522945a5dadc748e2ca379e
3971789dbdf609b3d9bfe866361b28e3
c90589baa925157ad833093a5a7bede5
-----END OpenVPN Static key V1-----
</tls-crypt>
